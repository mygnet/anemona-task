{
  "version": 3,
  "file": "App.css",
  "sources": [
    "Bye.svelte",
    "Profile.svelte",
    "Index.svelte",
    "Logout.svelte",
    "Delete.svelte",
    "Detail.svelte",
    "Item.svelte",
    "Menu.svelte",
    "Options.svelte",
    "index.svelte",
    "Navbar.svelte",
    "Tasks.svelte",
    "ButtonSelect.svelte",
    "Card.svelte",
    "Dropdown.svelte",
    "Gauge.svelte",
    "LabelEdit.svelte",
    "Progress.svelte",
    "Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import Lang from \"../services/Lang\";\r\n</script>\r\n\r\n<div>\r\n  <span class=\"dizzy\" />\r\n  <div><strong>{Lang.get(\"unknown-problem-occurred\")}</strong></div>\r\n  <div class=\"opts mt2\">\r\n    <div>{Lang.get(\"alternatives\")}:</div>\r\n    <ul>\r\n      <li> &bull; {Lang.get(\"please-refresh\")}</li>\r\n      <li> &bull; {Lang.get(\"close-and-open\")}</li>\r\n      <li> &bull; {Lang.get(\"sign-out-and-sign\")}</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .opts{\r\n\r\n  }\r\n  .dizzy {\r\n    display: block;\r\n    width: 48px;\r\n    height: 48px;\r\n    background-image: url(../assets/images/face-worried.png);\r\n  }\r\n\r\n</style>\r\n",
    "<script>\r\n    import LabelEdit from \"../components/LabelEdit.svelte\";\r\n    import Card from \"../components/Card.svelte\";\r\n    import Command from \"../../services/Command\";\r\n    import Session from \"../../services/Session\";\r\n\r\n    export let user = {};\r\n    const onSave = (id, text, done) => {\r\n        user.name = text;\r\n        const data = {};\r\n        data[id] = text;\r\n        //console.log(\"user Edit\", data);\r\n        Command.send(\"user/edit\", { user: data }, (dd) => {\r\n            //console.log(\"user result: \", dd);\r\n            if (dd && dd.id) {\r\n                user = dd;\r\n                Session.set(user);\r\n            }\r\n            if (typeof done === \"function\")\r\n                done(dd && dd.name ? dd.name : undefined);\r\n        });\r\n    };\r\n    const onAvatar = () => {\r\n        if(!user.allow) return;\r\n        Command.send(\"user/avatar\", (dd) => {\r\n            //console.log(\"user change avatar\", dd);\r\n            if (dd.avatarUrl) {\r\n                user = dd;\r\n                Session.set(user);\r\n                user.avatarUrl = dd.avatarUrl + \"?\" + Math.random();\r\n            }\r\n        });\r\n    };\r\n</script>\r\n\r\n<Card>\r\n    <div slot=\"content\">\r\n        <div class=\"options\"><li class=\"fa fa-cog\"></li></div>\r\n        <div class=\"notify\">12</div>\r\n        <div class=\"cover-photo\">\r\n            <img\r\n                src={user.avatarUrl}\r\n                alt=\"\"\r\n                class=\"profile\"\r\n                on:click={onAvatar}\r\n            />\r\n        </div>\r\n        <h2>{user.username}</h2>\r\n        <p>\r\n            {#if user.allow}\r\n                <LabelEdit id=\"name\" text={user.name} {onSave} />\r\n            {:else}\r\n                <div>{user.name} </div>\r\n            {/if}\r\n            {user.email}\r\n        </p>\r\n        {#if user.isAdmin}\r\n            <span>admin</span>\r\n        {/if}\r\n    </div>\r\n</Card>\r\n\r\n<style>\r\n    .options{\r\n        top: 20px;\r\n        right: 25px;\r\n        position: absolute;\r\n        font-size: 0.8em;\r\n        color: var(--vscode-button-foreground);\r\n        background-color: var(--vscode-terminal-ansiMagenta);\r\n        border-radius: 1em;\r\n        padding: 2px 4px;\r\n        padding-bottom: 2px;\r\n        display: none;\r\n    }\r\n    .notify{\r\n        top: 20px;\r\n        left: 15px;\r\n        position: absolute;\r\n        font-size: 0.7em;\r\n        color: var(--vscode-button-foreground);\r\n        background-color: var(--vscode-terminal-ansiRed);\r\n        border-radius: 1em;\r\n        padding: 2px 4px;\r\n        padding-bottom: 2px;\r\n        display: none;\r\n    }\r\n    h2 {\r\n        color: var(--vscode-editor-foreground);\r\n    }\r\n    .cover-photo {\r\n        background: url(../assets/images/user-cover-2.jpg) 100% / cover;\r\n        height: 100px;\r\n        width: 100%;\r\n        border-radius: 5px 5px 0 0;\r\n    }\r\n    .profile {\r\n        cursor: pointer;\r\n        height: 100px;\r\n        width: 100px;\r\n        border-radius: 50%;\r\n        margin: 50px auto;\r\n        border: 1px solid var(--vscode-quickInput-background);\r\n        padding: 7px;\r\n        background: var(--vscode-quickInput-background);\r\n    }\r\n    h2 {\r\n        margin: 50px auto 0px auto;\r\n    }\r\n    p {\r\n        margin: 0px auto 0px auto;\r\n        line-height: 21px;\r\n    }\r\n    span {\r\n        color: var(--vscode-button-foreground);\r\n        background-color: var(--vscode-button-hoverBackground);\r\n        border-radius: 2em;\r\n        padding: 0px 8px;\r\n        padding-bottom: 2px;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n  import Spinner from \"./components/Spinner.svelte\";\r\n  import Login from \"./Login.svelte\";\r\n  import Logout from \"./Logout.svelte\";\r\n  import Dash from \"./Dash.svelte\";\r\n  import Tasks from \"./Tasks.svelte\";\r\n  import Page from \"../services/Page\";\r\n  import Lang from \"../services/Lang\";\r\n  import Command from \"../services/Command\";\r\n  import Session from \"../services/Session\";\r\n  import State from \"../services/State\";\r\n  import Detail from \"./Task/Detail.svelte\";\r\n  import Bye from \"./Bye.svelte\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let vType = \"sidebar\";\r\n  let yScroll = 0;\r\n  let current = Spinner;\r\n  let idCurrent = \"spinner\";\r\n  let webTask = {\r\n    \"web-task\": Detail,\r\n  };\r\n  let pages = {\r\n    tasks: Tasks,\r\n    dash: Dash,\r\n    login: Login,\r\n    logout: Logout,\r\n  };\r\n\r\n  function saveScroller() {\r\n    yScroll = yScroll ? yScroll : State.get(\"scroll_\" + idCurrent, 0.01);\r\n    State.set(\"scroll_\" + idCurrent, yScroll);\r\n  }\r\n  const setComponet = (componet) => {\r\n    current = componet;\r\n  };\r\n  const onPage = (cmd, dat) => {\r\n    //console.log(\"onPage\", cmd, dat);\r\n    setComponet(Spinner);\r\n    idCurrent = cmd.shift();\r\n    let pag = {};\r\n    if (vType === \"web-task\") pag = webTask;\r\n    else pag = pages;\r\n\r\n    if (idCurrent) {\r\n      if (idCurrent.indexOf(\"list-data\") > -1) idCurrent = \"tasks\"; //parch\r\n      //console.log(\"component:\", vType, idCurrent);\r\n      if (pag[idCurrent] && idCurrent !== \"closed\") Page.set(idCurrent);\r\n      else return setComponet(Bye);\r\n      return setComponet(pag[idCurrent]);\r\n    }\r\n    setComponet(Bye);\r\n    //console.log(\"not component:\", vType, idCurrent);\r\n  };\r\n  const addCommandListener = () => {\r\n    window.addEventListener(\"message\", async (event) => {\r\n      const rd = event.data || {};\r\n      //console.log(\"received message:\", rd);\r\n      if (Command.call(rd)) return;\r\n      const cmd = rd.cmd.split(\"/\");\r\n      //console.log('command',cmd);\r\n      switch (cmd.shift()) {\r\n        case \"reloads\":\r\n          Command.send(\"reloads\");\r\n          return start();\r\n        case \"reload\":\r\n          return start();\r\n        case \"lang\":\r\n          return Lang.load(rd.dat);\r\n        case \"loading\":\r\n          return setComponet(Spinner);\r\n      }\r\n      onPage(cmd);\r\n    });\r\n  };\r\n  const refresh = () => {\r\n    //State.set(\"tasks\", undefined);\r\n    State.set(\"statistics\", undefined);\r\n  };\r\n  const start = () => {\r\n    setComponet(Spinner);\r\n    Session.auth(vType);\r\n  };\r\n  const onRunner = (cmd) => {\r\n    switch (cmd) {\r\n      case \"refresh\":\r\n        return refresh();\r\n    }\r\n  };\r\n  onMount(() => {\r\n    vType = document.body.id;\r\n    //console.log(\"body type:\", vType);\r\n    Page.addEventListener((page) => onPage([page]));\r\n    State.addEventListener((cmd) => onRunner(cmd));\r\n    addCommandListener();\r\n    start();\r\n  });\r\n  //{...data}\r\n</script>\r\n\r\n<div class=\"anemona-app\">\r\n  <svelte:component this={current} />\r\n</div>\r\n\r\n<svelte:window on:scroll={saveScroller} bind:scrollY={yScroll} />\r\n\r\n<style>\r\n  :root {\r\n    --container-paddding: 0px;\r\n  }\r\n  .anemona-app {\r\n    padding: 2px;\r\n    overflow-y: scroll; /* Hide vertical scrollbar */\r\n    overflow-x: hidden; /* Hide horizontal scrollbar */\r\n  }\r\n\r\n</style>\r\n",
    "<script>\r\n  import Command from \"../services/Command\";\r\n  import Lang from \"../services/Lang\";\r\n  import Page from \"../services/Page\";\r\n  import Session from \"../services/Session\";\r\n\r\n  const handleCancel = () => Page.back();\r\n  const handleExitSession = () =>{\r\n    Command.send(\"web-task/closed\");\r\n    Session.drop();\r\n  }\r\n\r\n</script>\r\n\r\n<div class=\"box-content\">\r\n  <h3 class=\" p2\">{Lang.get(\"are-you-sure-you-want-to-log-out\")}</h3>\r\n\r\n  <div class=\"clearfix\">\r\n    <div class=\"col col-6 center\">\r\n      <input\r\n        type=\"button\"\r\n        class=\"btn\"\r\n        value={Lang.get(\"cancel\")}\r\n        on:click={handleCancel}\r\n      />\r\n    </div>\r\n    <div class=\"col col-6 center\">\r\n      <button type=\"button\" on:click={handleExitSession}\r\n        >{Lang.get(\"disconnect\")}</button\r\n      >\r\n    </div>\r\n  </div>\r\n  <div />\r\n</div>\r\n\r\n<style>\r\n  .box-content {\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  input,\r\n  button {\r\n    display: inline-block;\r\n    width: 90%;\r\n  }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import State from \"../../services/State\";\r\n    import Command from \"../../services/Command\";\r\n    import Lang from \"../../services/Lang\";\r\n\r\n    export let task = {};\r\n    const dispatch = createEventDispatcher();\r\n    let project = State.get(\"project\");\r\n\r\n    function handleOnSubmit() {\r\n        //console.log(\"submit\");\r\n        Command.send(\"task/del\", task, (dd) => {\r\n            //console.log(\"del: result delete task\", dd);\r\n            if (dd && dd.id) {\r\n                const tk = State.get(\"filter_tasks\", 0);\r\n                const tasks = State.get(\"tasks-\" + tk, []);\r\n                const res = State.get(\"statistics\");\r\n                if (res && res[dd.idProject]) {\r\n                    res[dd.idProject] = undefined;\r\n                    State.set(\"statistics\", res);\r\n                }\r\n                State.set(\"tasks-0\", []);\r\n                State.set(\"tasks-1\", []);\r\n                dispatch(\"EventDeleted\", { op: \"del\", opc: \"tasks_\" + tk });\r\n            } else {\r\n                Command.send(\r\n                    \"onError\",\r\n                    Lang.key(dd ? dd.message || \"err\" : \"err\")\r\n                );\r\n            }\r\n        });\r\n    }\r\n    function onCancel() {\r\n        dispatch(\"EventDeleted\", { opc: \"list\" });\r\n    }\r\n</script>\r\n\r\n<form class=\"p1\" on:submit|preventDefault={handleOnSubmit}>\r\n    <h3>{project.name}</h3>\r\n    <h4 class=\"mb1\">{Lang.get(\"delete-task\")}</h4>\r\n    <span class=\"input mb1\">{task.title} </span>\r\n    <p class=\"input mb1\">{task.description}</p>\r\n    <h4 class=\"mb1\">{Lang.get(\"deadline\")}</h4>\r\n    <span class=\"mb1\">{task.dueDate}</span>\r\n    <br />\r\n    <h4>{Lang.get(\"are-you-sure-you-want-to-delete\")}</h4>\r\n    <div class=\"flex mt1\">\r\n        <input\r\n            class=\"btn\"\r\n            type=\"button\"\r\n            value={Lang.get(\"cancel\")}\r\n            on:click={onCancel}\r\n        />\r\n        <button class=\"btn\" type=\"submit\">{Lang.get(\"remove\")}</button>\r\n    </div>\r\n</form>\r\n\r\n<style>\r\n    p,\r\n    span {\r\n        padding: 2px;\r\n        display: block;\r\n        background-color: var(--vscode-input-background);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import Command from \"../../services/Command\";\r\n    import Lang from \"../../services/Lang\";\r\n    import State from \"../../services/State\";\r\n    import Spinner from \"../components/Spinner.svelte\";\r\n    import Progress from \"../components/Progress.svelte\";\r\n\r\n    let loading = true;\r\n    let working = false;\r\n    let task = {};\r\n    let user = null;\r\n    let data = { body: \"\", idIssue: 0, idProject: 0 };\r\n    let comments = [];\r\n    let notes = [];\r\n    let state = \"\";\r\n\r\n    function handleOnSubmit() {\r\n        data.idProject = task.idProject;\r\n        data.idIssue = task.id;\r\n        working = true;\r\n        Command.send(\"comments/add\", data, (cc) => {\r\n            working = false;\r\n            task.comments++;\r\n            //console.log('comments cc', cc);\r\n            const rs = comments.concat([cc]);\r\n            comments = rs;\r\n            data = {};\r\n        });\r\n    }\r\n\r\n    const load = () => {\r\n        setTimeout(() => (loading = false), 5000);\r\n        Command.send(\"task/load\", (dd) => {\r\n            //console.log(\"webtask cargando task....\", dd);\r\n            if (dd.id) State.set(\"task\", dd);\r\n            else dd = State.get(\"task\", {});\r\n            task = dd;\r\n            if (task.state === \"closed\") {\r\n                state = Lang.get(\"closed-at\") + \"  \" + task.closedAt;\r\n            } else {\r\n                state =\r\n                    Lang.get(\"opened\") +\r\n                    \" - \" +\r\n                    Lang.get(\"updated-at\") +\r\n                    \" \" +\r\n                    task.updatedAt;\r\n            }\r\n            Command.send(\r\n                \"comments/load\",\r\n                { idProject: task.project.id, id: task.id },\r\n                (cc) => {\r\n                    //console.log('comments all', cc.comments);\r\n                    comments = cc.comments;\r\n                    notes = cc.notes;\r\n                    //console.log(\"comentarios\", cc);\r\n                    loading = false;\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    onMount(() => {\r\n        //console.log(\"webtask- loading\", loading);\r\n        user = State.get(\"user\");\r\n        load();\r\n    });\r\n</script>\r\n\r\n{#if loading}\r\n    <Spinner />\r\n{:else}\r\n    <h2 class=\"mb2\">{task.title}</h2>\r\n    <div class={task.state}>{state}</div>\r\n    <hr />\r\n    <div class=\"flex mt1\">\r\n        <div class=\"user\">\r\n            <div class=\"text-center\">\r\n                <strong class=\"mb1\">{Lang.get(\"author\")}</strong>\r\n                <img src={task.author.avatar_url} alt=\"\" />\r\n                <div>{task.author.username}</div>\r\n            </div>\r\n            {#if task.assignee && task.assignee.id !== task.author.id}\r\n                <hr class=\"mt2\" />\r\n                <div class=\"text-center mt2\">\r\n                    <strong class=\"mb1\">{Lang.get(\"assign\")}</strong>\r\n                    <img src={task.assignee.avatar_url} alt=\"\" />\r\n                    <div>{task.assignee.username}</div>\r\n                </div>\r\n            {/if}\r\n        </div>\r\n\r\n        <div class=\"task\">\r\n            <strong>{Lang.get(\"project\")}:</strong>\r\n            <p class=\"input mb1\">{task.project.name}</p>\r\n            <strong>{Lang.get(\"description\")}:</strong>\r\n            <p class=\"input mb1\">{task.description}</p>\r\n            <strong>{Lang.get(\"deadline\")}:</strong>\r\n            <p class=\"input mb2\">{task.dueDate}</p>\r\n            <strong>{Lang.get(\"progress-percentage\")}:</strong>\r\n            <div class=\"progress\">\r\n                <Progress value={task.progress} color=\"cyan\" />\r\n            </div>\r\n            <strong>{Lang.get(\"priority\")}:</strong>\r\n            <div class=\"mb2\">\r\n                <div class=\"tag {task.priority}\">{task.priority}</div>\r\n            </div>\r\n            {#if notes.length}\r\n                <strong>{Lang.get(\"logs\")}:</strong>\r\n                <ul class=\"ml3 fs-8px\">\r\n                    {#each notes as note}\r\n                        <li class=\"fs8px\">{note.createdAt} - {note.body}</li>\r\n                    {/each}\r\n                </ul>\r\n            {/if}\r\n\r\n            <br />\r\n        </div>\r\n    </div>\r\n    <hr />\r\n    <div>\r\n        <h2 class=\"mb3\">{Lang.get(\"comments\")} ({task.comments})</h2>\r\n        {#each comments as comment}\r\n            <div class=\"flex mb2\">\r\n                <div class=\"user\">\r\n                    <div class=\"text-center\">\r\n                        <img src={comment.author.avatar_url} alt=\"\" />\r\n                        <div>{comment.author.username}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"task\">\r\n                    <strong>{Lang.get(\"created-at\")}:</strong>\r\n                    <div class=\"input\">{comment.createdAt}</div>\r\n                    <strong>{Lang.get(\"comment\")}:</strong>\r\n                    <div class=\"input\">{comment.body}</div>\r\n                </div>\r\n            </div>\r\n            <hr class=\"mb2\" />\r\n        {/each}\r\n        {#if working}\r\n            <div class=\"fas fa-spinner fa-spin fa-3x\" />\r\n        {:else if task.state === \"opened\"}\r\n            <form class=\"p1\" on:submit|preventDefault={handleOnSubmit}>\r\n                <strong>{Lang.get(\"new-comment\")}:</strong>\r\n                <textarea\r\n                    required=\"required\"\r\n                    class=\"textarea mb2\"\r\n                    bind:value={data.body}\r\n                    rows=\"4\"\r\n                    placeholder={Lang.get(\"comment\")}\r\n                />\r\n                <div class=\"flex mt1\">\r\n                    <div class=\"spacer\" />\r\n                    <button class=\"btn\" type=\"submit\">{Lang.get(\"add\")}</button>\r\n                </div>\r\n            </form>\r\n        {/if}\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .opened {\r\n        color: var(--vscode-textLink-foreground);\r\n    }\r\n    .closed {\r\n        color: var(--vscode-errorForeground);\r\n    }\r\n    .spacer {\r\n        width: 100%;\r\n    }\r\n    hr {\r\n        height: 0px;\r\n        border: 0px;\r\n        border-bottom: 1.5px solid var(--vscode-dropdown-border);\r\n    }\r\n    .task {\r\n        width: 100%;\r\n    }\r\n    .user {\r\n        padding-right: 8px;\r\n        width: 100px;\r\n    }\r\n    .user img {\r\n        padding: 2px;\r\n        width: 80%;\r\n    }\r\n    .text-center {\r\n        text-align: center;\r\n    }\r\n    .input {\r\n        display: block;\r\n    }\r\n    p,\r\n    span {\r\n        padding: 3px;\r\n        display: block;\r\n        background-color: var(--vscode-input-background);\r\n    }\r\n    .tag {\r\n        width: 60px;\r\n        display: block;\r\n        padding: 2px;\r\n        text-align: center;\r\n    }\r\n    .tag.none {\r\n        background-color: transparent;\r\n    }\r\n    .tag.alta {\r\n        color: #fff;\r\n        background-color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .tag.media {\r\n        color: #000;\r\n        background-color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .tag.baja {\r\n        color: #000;\r\n        background-color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import Command from \"../../../services/Command\";\r\n    import State from \"../../../services/State\";\r\n    import MenuOptions from \"./Menu.svelte\";\r\n    import Progress from \"../../components/Progress.svelte\";\r\n    import Session from \"../../../services/Session\";\r\nimport Lang from \"../../../services/Lang\";\r\n\r\n    export let selOpc = () => {};\r\n    export let task = {};\r\n    let notify = 'none';\r\n    let valueProgress = 0;\r\n    let showProgress = \"\";\r\n\r\n    const inOf = (name) => task.labels.indexOf(name) > -1;\r\n    const hs = (name) => {\r\n        const idx = task.labels.indexOf(name);\r\n        return idx > -1 ? task.labels[idx] : undefined;\r\n    };\r\n    const pry = () => hs(\"alta\") || hs(\"media\") || hs(\"baja\") || \"none\";\r\n    const getProgress = () => {\r\n        showProgress = \"\";\r\n        let val = 0;\r\n        for (let x = 0; x <= 10; x++)\r\n            val = inOf((x * 10).toString()) ? x * 10 : val;\r\n        if (valueProgress !== undefined) valueProgress = val;\r\n        return val;\r\n    };\r\n\r\n    let user = {};\r\n    let idProgress = task.id;\r\n    let progress = 0;\r\n    let checked = \"\";\r\n    let priority = \"none\";\r\n\r\n    $: priority = pry(task.labels);\r\n    $: checked = task.state === \"closed\" ? \"checked\" : \"\";\r\n    $: progress = getProgress(task.labels) / 100;\r\n    //$: notify = task.labels.indexOf('100') >=0 ?'info':'none';\r\n\r\n    const checkItem = () => {\r\n        task.state = task.state === \"opened\" ? \"closed\" : \"opened\";\r\n        task.progress = task.state === \"closed\" ? 0 : 1;\r\n        Command.send(\"task/state\", task, (rs) => {\r\n            State.run(\"refresh\");\r\n            Command.send(\"web-task/refresh\", task);\r\n            //console.log(\"TASKS::\", rs);\r\n        });\r\n    };\r\n    const handleProgress = () => {\r\n        progress = valueProgress / 100;\r\n        task.labels = [priority, valueProgress.toString()];\r\n        //console.log(task.labels);\r\n        Command.send(\"task/labels\", task, (rs) => {\r\n            State.run(\"refresh\");\r\n            Command.send(\"web-task/refresh\", task);\r\n            //console.log(\"TASKS::\", rs);\r\n        });\r\n    };\r\n    const onProgress = (payload) => {\r\n        if (task.state === \"opened\") {\r\n            showProgress = payload === showProgress ? \"\" : payload;\r\n        }\r\n    };\r\n\r\n    const handleComment = ()=> {\r\n        Command.send(\"web-task/comments\", task);\r\n    };\r\n    onMount(() => {\r\n        user = Session.get();\r\n    });\r\n</script>\r\n\r\n<message-item class={task.state === \"opened\" ? \"unread\" : \"done\"}>\r\n    <div class=\"tag {priority}\" />\r\n    <input class=\"checkbox\" type=\"checkbox\" {checked} on:change={checkItem} />\r\n    <span class=\"notify {notify}\">\r\n        <i class=\"fa fa-bell \" />\r\n    </span>\r\n    <header>\r\n        <div class=\"sender-info\" on:click={handleComment}>\r\n            <span class=\"subject\">{task.title}</span>\r\n            <span class=\"date\">{task.dueDate}</span>\r\n        </div>\r\n        {#if user.id === task.author.id && task.state === \"opened\"}\r\n            <span class=\"menu\">\r\n                <MenuOptions selOpc={(op) => selOpc(op + \":\" + task.id)} />\r\n            </span>\r\n        {/if}\r\n    </header>\r\n    <main>\r\n        <p>{task.description}</p>\r\n        <div>\r\n            <div class=\"progress\" on:click={() => onProgress(idProgress)}>\r\n                <Progress value={valueProgress} color=\"cyan\" />\r\n            </div>\r\n            {#if showProgress === idProgress && task.state === \"opened\"}\r\n                <div>\r\n                    <input\r\n                        type=\"range\"\r\n                        class=\"input-range\"\r\n                        step=\"10\"\r\n                        list=\"tickmarks\"\r\n                        on:change={handleProgress}\r\n                        bind:value={valueProgress}\r\n                    />\r\n                    <datalist id=\"tickmarks\">\r\n                        <option value=\"0\" label=\"0%\" />\r\n                        <option value=\"10\" />\r\n                        <option value=\"20\" />\r\n                        <option value=\"30\" />\r\n                        <option value=\"40\" />\r\n                        <option value=\"50\" label=\"50%\" />\r\n                        <option value=\"60\" />\r\n                        <option value=\"70\" />\r\n                        <option value=\"80\" />\r\n                        <option value=\"90\" />\r\n                        <option value=\"100\" label=\"100%\" />\r\n                        <input />\r\n                    </datalist>\r\n                </div>\r\n            {/if}\r\n            <span class=\"comment\" on:click={handleComment}>\r\n              <i class =\"fa fa-comment\"></i> Comentarios ({task.comments})\r\n            </span>\r\n        </div>\r\n    </main>\r\n    {#if task.assignee &&  task.assignee.id !== user.id}\r\n        <footer>\r\n            <strong>{Lang.get('assign')}:</strong>\r\n            <div>\r\n                <img src={task.assignee.avatar_url} alt=\"\" />\r\n                <span> {task.assignee.name}</span>\r\n            </div>\r\n        </footer>\r\n    {/if}\r\n</message-item>\r\n\r\n<style>\r\n    .comment{\r\n        float: right;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        font-size: .8em;\r\n    }\r\n    .progress {\r\n        cursor: pointer;\r\n    }\r\n    .tag {\r\n        position: absolute;\r\n        width: 2px;\r\n        height: 100%;\r\n        top: 0px;\r\n        left: 0px;\r\n    }\r\n    .tag.none {\r\n        background-color: transparent;\r\n    }\r\n    .tag.alta {\r\n        background-color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .tag.media {\r\n        background-color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .tag.baja {\r\n        background-color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n    .notify{\r\n        position: absolute;\r\n        left:1.3em;\r\n        top: 3rem;\r\n    }\r\n\r\n    .notify.danger i {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n\r\n    .notify.warning i {\r\n        color:var(--vscode-terminal-ansiYellow);\r\n    }\r\n\r\n    .notify.info i {\r\n        color: var(--vscode-terminal-ansiCyan);\r\n    }\r\n    \r\n    .notify.none{\r\n        display: none;\r\n    }\r\n    \r\n    message-item {\r\n        width: 100%;\r\n        padding: 1rem;\r\n        margin-bottom: 0.5rem;\r\n        position: relative;\r\n        opacity: 0.4;\r\n    }\r\n    message-item.unread {\r\n        background-color: var(--vscode-quickInput-background);\r\n        opacity: 1;\r\n    }\r\n    message-item.unread:hover {\r\n        background-color: var(--vscode-dropdown-background);\r\n        opacity: 1;\r\n    }\r\n    message-item.unread .subject {\r\n        font-weight: 600;\r\n    }\r\n    message-item:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n    message-item .checkbox {\r\n        position: absolute;\r\n        top: 1.2rem;\r\n    }\r\n    message-item .priority {\r\n        position: absolute;\r\n        top: 4rem;\r\n        left: 18px;\r\n    }\r\n\r\n    message-item .priority.none {\r\n        display: none;\r\n    }\r\n\r\n    message-item .priority .alta {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n\r\n    message-item .priority .media {\r\n        color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    message-item .priority .baja {\r\n        color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n\r\n    message-item header,\r\n    message-item main {\r\n        margin-left: 2rem;\r\n    }\r\n    message-item header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 1rem;\r\n        color: var(--vscode-dropdown-foreground);\r\n    }\r\n    message-item .sender-info {\r\n        cursor: pointer;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-grow: 1;\r\n    }\r\n    message-item .date {\r\n        font-size: 0.8rem;\r\n    }\r\n    message-item .menu {\r\n        font-weight: normal;\r\n        font-size: 0.8rem;\r\n    }\r\n    message-item main p {\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-size: 0.8rem;\r\n        color: var(--vscode-editor-foreground);\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    message-item.done main p,\r\n    message-item.done .subject,\r\n    message-item.done .date {\r\n        text-decoration: line-through;\r\n    }\r\n\r\n    footer {\r\n        padding-left: 15px;\r\n        margin-top: 5px;\r\n        width: 100%;\r\n    }\r\n    footer strong {\r\n        font-size: 0.9em;\r\n    }\r\n    footer div {\r\n        display: flex;\r\n    }\r\n    footer div img {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n    footer div span {\r\n        font-size: 0.9em;\r\n        display: inline-block;\r\n        padding-left: 10px;\r\n        padding-top: 5px;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import Options from \"./Options.svelte\";\r\n    export let selOpc = () => {};\r\n</script>\r\n\r\n<div class=\"dropdown\" tabindex=\"0\">\r\n    <i class=\"db2\" tabindex=\"0\" />\r\n    <span class=\"dropbtn\">•••</span>\r\n    <div class=\"dropdown-content\" tabindex=\"0\">\r\n        <Options {selOpc} />\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .dropdown {\r\n        display: inline-block;\r\n        position: relative;\r\n        outline: none;\r\n    }\r\n    .dropbtn {\r\n        padding: 4px;\r\n        color: var(--vscode-notifications-foreground);\r\n        cursor: pointer;\r\n        transition: 0.35s ease-out;\r\n    }\r\n    .dropdown .dropdown-content {\r\n        position: absolute;\r\n        padding: 5px;\r\n        top: -10px;\r\n        right: 25px;\r\n        background-color: var(--vscode-quickInput-background);\r\n        min-width: 120%;\r\n        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n        z-index: 100000;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        transition: 0.35s ease-out;\r\n    }\r\n    .dropdown:focus .dropdown-content {\r\n        outline: none;\r\n        /* transform: translateY(0px); */\r\n        visibility: visible;\r\n        opacity: 1;\r\n        z-index: 10000;\r\n    }\r\n    .dropbtn:hover,\r\n    .dropdown:focus .dropbtn {\r\n        color: #ffffff;\r\n    }\r\n    .dropdown .db2 {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        z-index: 10;\r\n        display: none;\r\n    }\r\n    .dropdown:focus .db2 {\r\n        display: inline-block;\r\n    }\r\n    .dropdown .db2:focus .dropdown-content {\r\n        outline: none;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import Session from \"../../../services/Session\";\r\n    export let selOpc = (opc) => {};\r\n\r\n</script>\r\n\r\n<span class=\"opc text-center\">\r\n    {#if Session.allow()}\r\n        <span on:click={() => selOpc(\"D\")}\r\n            ><i class=\"fas fa-trash red\" />\r\n        </span>\r\n        <i class=\"line\" />\r\n    {/if}\r\n    <span on:click={() => selOpc(\"E\")}><i class=\"fa fa-edit blue\" /> </span>\r\n</span>\r\n\r\n<style>\r\n    .opc {\r\n        color: #cccccc;\r\n        width: 50px;\r\n        float: left;\r\n        padding: 3px 4px;\r\n        display: inline;\r\n        text-decoration: none;\r\n        transition: 0.35s ease-out;\r\n        z-index: 100001;\r\n    }\r\n    .opc span {\r\n        margin: 0px 2px;\r\n    }\r\n    .opc span:hover {\r\n        cursor: pointer;\r\n        background-color: var(--vscode-dropdown-background);\r\n    }\r\n    .line {\r\n        margin-left: 2px;\r\n        margin-right: 3px;\r\n        border-left: 1px solid var(--vscode-editorCommentsWidget-resolvedBorder);\r\n    }\r\n\r\n    .red {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import Lang from \"../../../services/Lang\";\r\n    import State from \"../../../services/State\";\r\n    import Page from \"../../../services/Page\";\r\n    import Item from \"./Item.svelte\";\r\n\r\n    export let selOpc = () => {};\r\n    export let tasks = [];\r\n\r\n    onMount(() => {\r\n        Page.setScroll(\"tasks\");\r\n    });\r\n</script>\r\n\r\n{#if tasks instanceof Array && tasks.length}\r\n    <div class=\"inbox\">\r\n        <div class=\"inbox-list\">\r\n            {#each tasks as task}\r\n                <Item {task} {selOpc} />\r\n            {/each}\r\n        </div>\r\n    </div>\r\n{:else}\r\n    {Lang.get(\r\n        \"no-tasks-\" + (State.get(\"filter_tasks\") ? \"delegated\" : \"assigned\")\r\n    )}\r\n{/if}\r\n\r\n<style>\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .inbox {\r\n        /*height: calc(100vh - 100px);*/\r\n        padding: 2px;\r\n        margin: 0px;\r\n        margin-top: 0px;\r\n        /* overflow-y: scroll; /* Hide vertical scrollbar */\r\n        /* overflow-x: hidden; /* Hide horizontal scrollbar */\r\n    }\r\n\r\n    .inbox-list {\r\n        padding: 0px;\r\n        margin: 0px;\r\n        display: flex;\r\n        width: 100%;\r\n        flex-direction: column;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount, createEventDispatcher } from \"svelte\";\r\n    import Lang from \"../../services/Lang\";\r\n    import State from \"../../services/State\";\r\n    import Dropdown from \"../components/Dropdown.svelte\";\r\n\r\n    export let btns = \"\";\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let buttons = { left: {}, right: {} };\r\n    $: buttons = parserButtons(btns);\r\n    const navItems = {\r\n        Priority: {\r\n            type: \"dropdown\",\r\n            id: \"priority\",\r\n            selectedIndex: State.get(\"filter_priority\", 0),\r\n            options: [\r\n                { title: Lang.get('all'), icon: \"fas fa-square blue\" },\r\n                { title: Lang.get('high-priority'), icon: \"fas fa-square red\" },\r\n                { title: Lang.get('medium-priority'), icon: \"fas fa-square yellow\" },\r\n                { title: Lang.get('low-priority'), icon: \"fas fa-square green\" },\r\n            ],\r\n        },\r\n        State: {\r\n            type: \"dropdown\",\r\n            id: \"state\",\r\n            selectedIndex: State.get(\"filter_state\", 0),\r\n            options: [\r\n                { title: Lang.get('all'), icon: \"far fa-square blue\" },\r\n                { title: Lang.get('open'), icon: \"far fa-square orange\" },\r\n                { title: Lang.get('close'), icon: \"far fa-check-square green\" },\r\n            ],\r\n        },\r\n        Task: {\r\n            type: \"dropdown\",\r\n            id: \"tasks\",\r\n            selectedIndex: State.get(\"filter_tasks\", 0),\r\n            options: [\r\n                { title: Lang.get('assigned'), icon: \"far fa-user blue\" },\r\n                { title: Lang.get(\"delegates\"), icon: \"fas fa-users orange\" },\r\n            ],\r\n        },\r\n        Add: {\r\n            type: \"button\",\r\n            id: \"add\",\r\n            title: Lang.get('new-task'),\r\n            icon: \" fas fa-plus blue\",\r\n        },\r\n        Back: {\r\n            type: \"button\",\r\n            id: \"back\",\r\n            title: Lang.get('back'),\r\n            icon: \" fas fa-reply blue\",\r\n        },\r\n    };\r\n    const parseBtn = (btn) => {\r\n        const rs = [];\r\n        const r = btn.split(\",\");\r\n        for (const x in r) {\r\n            if (navItems[r[x]]) {\r\n                const ix = navItems[r[x]];\r\n                ix.selectedIndex = State.get(\"filter_\" + ix.id, 0);\r\n                rs.push(navItems[r[x]]);\r\n            }\r\n        }\r\n        return rs;\r\n    };\r\n\r\n    const parserButtons = (dd) => {\r\n        if (typeof dd === \"string\") {\r\n            const r = dd.split(\"/\");\r\n            buttons.left = r[0] ? parseBtn(r[0]) : [];\r\n            buttons.right = r[0] ? parseBtn(r[1]) : [];\r\n        }\r\n        return buttons;\r\n    };\r\n\r\n    const btnToolbar = (op) => {\r\n        if (op instanceof CustomEvent) {\r\n            op = op.detail.id + \"_\" + op.detail.selectedIndex;\r\n        } else {\r\n            op = op;\r\n        }\r\n        //console.log(op);\r\n        dispatch(\"EventToolsBtns\", { opc: op });\r\n    };\r\n\r\n    onMount(() => {\r\n        buttons = parserButtons(btns);\r\n    });\r\n</script>\r\n\r\n<div class=\"box-nav\">\r\n    <div class=\"box-left\">\r\n        {#each buttons.left as btn}\r\n            {#if btn.type === \"dropdown\"}\r\n                <Dropdown on:SelectedOption={btnToolbar} {btn} />\r\n            {:else if btn.type === \"button\"}\r\n                <span\r\n                    class=\"btn\"\r\n                    title={btn.title}\r\n                    on:click={() => btnToolbar(btn.id)}\r\n                    ><i class={btn.icon} />\r\n                </span>\r\n            {/if}\r\n        {/each}\r\n    </div>\r\n    <div class=\"box-right\">\r\n        {#each buttons.right as btn}\r\n            {#if btn.type === \"dropdown\"}\r\n                <Dropdown on:EventSeletect={btnToolbar} {btn} />\r\n            {:else if btn.type === \"button\"}\r\n                <span\r\n                    class=\"btn\"\r\n                    title={btn.title}\r\n                    on:click={() => btnToolbar(btn.id)}\r\n                    ><i class={btn.icon} />\r\n                </span>\r\n            {/if}\r\n        {/each}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .box-nav {\r\n        padding: 2px;\r\n        margin-bottom: 5px;\r\n        background-color: var(--vscode-editorHoverWidget-background);\r\n    }\r\n    .box-left,\r\n    .box-right {\r\n        display: inline-block;\r\n        width: 48%;\r\n    }\r\n    .box-right {\r\n        float: right;\r\n        text-align: right;\r\n    }\r\n    .btn {\r\n        display: inline-block;\r\n        padding: 1px 4px;\r\n        cursor: pointer;\r\n    }\r\n    .red {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .yellow {\r\n        color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .orange {\r\n        color: var(--vscode-charts-orange);\r\n    }\r\n    .green {\r\n        color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n    .blue {\r\n        color: var(--vscode-charts-blue);\r\n    }\r\n\r\n    .btn:hover {\r\n        background-color: var(--vscode-editorHoverWidget-border);\r\n    }\r\n\r\n    .line {\r\n        width: 0px;\r\n        margin-left: 4px;\r\n        padding-right: 0px;\r\n        cursor: auto;\r\n        border-left: 1px solid var(--vscode-editorHoverWidget-border);\r\n    }\r\n    .btn.line:hover {\r\n        background-color: var(--vscode-editorHoverWidget-background);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import InboxTask from \"./Task/List/index.svelte\";\r\n    import NewTask from \"./Task/New.svelte\";\r\n    import DeleteTask from \"./Task/Delete.svelte\";\r\n    import Navbar from \"./Task/Navbar.svelte\";\r\n    import ButtonSelect from \"./components/ButtonSelect.svelte\";\r\n    import Spinner from \"./components/Spinner.svelte\";\r\n    import Command from \"../services/Command\";\r\n    import Lang from \"../services/Lang\";\r\n    import State from \"../services/State\";\r\n    import { onMount } from \"svelte\";\r\n\r\n    let project = { id: 0, name: \"\" };\r\n    let task = {};\r\n    let tasks = {};\r\n\r\n    let btns = \"\";\r\n    let label = \"\";\r\n    let show = \"\";\r\n    let expand = \"\";\r\n    let toolbar = {}; //objeto que controlara los metodos del toolbar\r\n\r\n    const setLabel = (d) =>\r\n        (label = d.id ? d.name : Lang.get(\"select-project\"));\r\n    const setProject = (res) => {\r\n        setLabel(res);\r\n        project = res;\r\n        State.set(\"project\", project);\r\n    };\r\n    const onExpand = (evt) => {\r\n        expand = evt.detail ? \"expand\" : \"\";\r\n    };\r\n    const win = (op) => {\r\n        if (op === \"list\") {\r\n            if (project.id) {\r\n                btns = \"Priority,State,Task/Add\";\r\n            } else return (show = \"none\");\r\n        } else if (op === \"new\") {\r\n            task = {};\r\n            btns = \"Back/\";\r\n        } else if (op === \"edit\") {\r\n            btns = \"Back/\";\r\n        } else {\r\n            btns = \"\";\r\n        }\r\n        show = op;\r\n        if (typeof toolbar.set === \"function\") toolbar.set(btns);\r\n    };\r\n    const loadTasks = (ty, done) => {\r\n        //console.log('Task:',ty, project)\r\n        Command.send(\"task/list-data-\" + ty, project, (dd) => {\r\n            //console.log('Task result:',dd)\r\n            State.set(\"tasks-\" + ty, dd);\r\n            doneFilter(dd, done);\r\n        });\r\n    };\r\n    const filterPriority = (dd) => {\r\n        const rs = [];\r\n        const ty = State.get(\"filter_priority\", 0);\r\n        if (ty === 0) return dd;\r\n        for (const x in dd) {\r\n            if (ty === 1 && dd[x].labels.indexOf(\"alta\") > -1) rs.push(dd[x]);\r\n            else if (ty === 2 && dd[x].labels.indexOf(\"media\") > -1)\r\n                rs.push(dd[x]);\r\n            else if (ty === 3 && dd[x].labels.indexOf(\"baja\") > -1)\r\n                rs.push(dd[x]);\r\n        }\r\n        return rs;\r\n    };\r\n    const filterState = (dd) => {\r\n        const rs = [];\r\n        const ty = State.get(\"filter_state\", 0);\r\n        if (ty === 0) return dd;\r\n        for (const x in dd) {\r\n            if (ty === 1 && dd[x].state === \"opened\") rs.push(dd[x]);\r\n            else if (ty === 2 && dd[x].state === \"closed\") rs.push(dd[x]);\r\n        }\r\n        return rs;\r\n    };\r\n    const doneFilter = (dd, done) => {\r\n        dd = filterState(dd);\r\n        dd = filterPriority(dd);\r\n        tasks = dd;\r\n        done(\"list\");\r\n    };\r\n    const applyFilter = (done) => {\r\n        const ty = State.get(\"filter_tasks\", 0);\r\n        //console.log('TASK: ty', ty);\r\n        let tk = State.get(\"tasks-\" + ty, []);\r\n        //console.log('TASK:', tk);\r\n        if (tk && tk.length) {\r\n            doneFilter(tk, done);\r\n        } else {\r\n            win(\"load\");\r\n            loadTasks(ty, () => {\r\n                done(\"list\");\r\n            });\r\n        }\r\n    };\r\n    const saveFilter = (op, done) => {\r\n        const r = op.split(\"_\");\r\n        if (r.length > 1) {\r\n            State.set(\"filter_\" + r[0], parseInt(r[1]));\r\n            return applyFilter(done);\r\n        }\r\n        return done(op);\r\n    };\r\n    const btnToolbar = (opc) => {\r\n        saveFilter(opc, (op) => {\r\n            if (op === \"add\") win(\"new\");\r\n            else if (op === \"back\") win(\"list\");\r\n            else win(op);\r\n        });\r\n    };\r\n    const btnActions = () => {\r\n        applyFilter(() => {\r\n            //\r\n        });\r\n    };\r\n    const onToolBar = (evt) => {\r\n        const res = evt.detail;\r\n        //console.log(res);\r\n        if (typeof res.set === \"function\") {\r\n            toolbar = res;\r\n            toolbar.set(btns);\r\n        }\r\n        if (res.op) btnActions(res.op);\r\n        if (res.opc) btnToolbar(res.opc);\r\n    };\r\n    const onSelect = (evt) => {\r\n        const res = evt.detail;\r\n        if (res.data) {\r\n            //console.log(\"::: data task :::\", res.data);\r\n            setProject(res.data);\r\n            win(\"load\");\r\n            loadTasks(State.get(\"filter_tasks\", 0), () => {\r\n                win(\"list\");\r\n            });\r\n        } else {\r\n            Command.send(\"project/search\", { key: res.value }, res.fun);\r\n        }\r\n    };\r\n    function getById(id) {\r\n        for (const x in tasks) {\r\n            if (tasks[x].id === id) return tasks[x];\r\n        }\r\n        return {};\r\n    }\r\n    const selOpc = (opc) => {\r\n        const r = opc.split(\":\");\r\n        if (r[0] === \"E\") {\r\n            task = getById(parseInt(r[1]));\r\n            //console.log(task);\r\n            win(\"edit\");\r\n        } else if (r[0] === \"D\") {\r\n            task = getById(parseInt(r[1]));\r\n            //console.log(task);\r\n            win(\"del\");\r\n        }\r\n        //console.log(\"options: \", opc);\r\n    };\r\n    onMount(() => {\r\n        setProject(State.get(\"project\", project));\r\n        win(\"load\");\r\n        loadTasks(State.get(\"filter_tasks\", 0), () => {\r\n            win(\"list\");\r\n        });\r\n    });\r\n</script>\r\n\r\n<header class={expand}>\r\n    {#if show !== \"new\"}\r\n        <ButtonSelect\r\n            id=\"Project\"\r\n            {label}\r\n            on:EventExpand={onExpand}\r\n            on:EventSelect={onSelect}\r\n        />\r\n    {/if}\r\n    {#if show !== \"none\"}\r\n        <Navbar {btns} on:EventToolsBtns={onToolBar} />\r\n    {/if}\r\n</header>\r\n<main class={expand}>\r\n    {#if show === \"list\"}\r\n        <InboxTask {tasks} {selOpc} />\r\n    {:else if show === \"new\" || show === \"edit\"}\r\n        <NewTask {task} on:EventAdded={onToolBar} />\r\n    {:else if show === \"del\"}\r\n        <DeleteTask {task} on:EventDeleted={onToolBar} />\r\n    {:else if show === \"load\"}\r\n        <Spinner />\r\n    {/if}\r\n</main>\r\n\r\n<style>\r\n    header {\r\n        position: fixed;\r\n        margin-top: -8px;\r\n        padding-top: 6px;\r\n        background-color: var(--vscode-editor-background);\r\n        height: 62px;\r\n        width: calc(100% - 14px);\r\n        z-index: 1001;\r\n    }\r\n    header.expand {\r\n        height: 120px;\r\n    }\r\n    main {\r\n        margin-top: 55px;\r\n    }\r\n    main.expand {\r\n        margin-top: 125px;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import Lang from \"../../services/Lang\";\r\n    //import { Lang } from \"../../services\";\r\n    export let id = \"\";\r\n    export let label = \"\";\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let edit = false;\r\n    let value = \"\";\r\n    let disabled = false;\r\n    let css = \"fas fa-search\";\r\n    let options = [];\r\n    let sel = { id: 0, name: \"\" };\r\n    let select = null;\r\n\r\n    const onExpand = (edit) => {\r\n        dispatch(\"EventExpand\", edit);\r\n    };\r\n    const onEdit = (cancel) => {\r\n        edit = edit ? false : true;\r\n        onExpand(edit);\r\n    };\r\n    const bbs = (dis) => {\r\n        disabled = dis;\r\n        if (dis) {\r\n            options = [{ id: \"\", value: Lang.get(\"loading\") + \"...\" }];\r\n            sel.id = \"\";\r\n        }\r\n        css = \"fas fa-\" + (disabled ? \"spinner fa-spin\" : \"search\");\r\n    };\r\n    const onSubmit = () => {\r\n        bbs(true);\r\n        dispatch(\"EventSelect\", {\r\n            id: id,\r\n            value: value || \"\",\r\n            fun: (dd) => {\r\n                dd.unshift({\r\n                    id: \"\",\r\n                    value: Lang.get(\"select-option\") + \"...\",\r\n                });\r\n                options = dd;\r\n                bbs(false);\r\n                dispatch(\"EventSelect\", { id: id, data: { id: 0, name: \"\" } });\r\n            },\r\n        });\r\n    };\r\n    const onSelected = () => {\r\n        sel.name = select.options[select.selectedIndex].text;\r\n        dispatch(\"EventSelect\", { id: id, data: sel });\r\n    };\r\n</script>\r\n\r\n<div>\r\n    {#if edit === true}\r\n        <div class=\"clearfix mb1\">\r\n            <div class=\"left\"><h3>{label}</h3></div>\r\n            <div class=\"right\">\r\n                <button\r\n                    {disabled}\r\n                    class=\"btn btn-cancel\"\r\n                    on:click={() => onEdit(1)}\r\n                >\r\n                    <i class=\"fas fa-xmark\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"item-group\">\r\n            <input {disabled} placeholder=\"{Lang.get('search')}...\" bind:value type=\"text\" />\r\n            <button\r\n                {disabled}\r\n                class=\"btn btn-clean\"\r\n                on:click={() => (value = \"\")}\r\n            >\r\n                <i class=\"fas fa-eraser\" />\r\n            </button>\r\n            <button class=\"btn btn-search\" {disabled} on:click={onSubmit}>\r\n                <i class={css} />\r\n            </button>\r\n        </div>\r\n        <div class=\"mt1\">\r\n            <select\r\n                class=\"select\"\r\n                bind:this={select}\r\n                bind:value={sel.id}\r\n                on:change={onSelected}\r\n            >\r\n                {#each options as op}\r\n                    <option value={op.id}>{op.value}</option>\r\n                {/each}\r\n            </select>\r\n        </div>\r\n    {:else}\r\n        <button class=\"mb1\" on:click={onEdit}>{label}</button>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    h3 {\r\n        padding-left: 10px;\r\n        text-align: center;\r\n    }\r\n    .item-group {\r\n        display: flex;\r\n        margin: 0px;\r\n    }\r\n    input {\r\n        height: 26px;\r\n    }\r\n    .select {\r\n        padding: 1px;\r\n        height: 26px;\r\n    }\r\n    .btn {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n    .btn-clean,\r\n    .btn-search {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n    .btn-cancel {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n\r\n</style>\r\n",
    "<div class=\"card mb1\">\r\n    <slot name=\"content\"></slot>\r\n</div>\r\n\r\n<style>\r\n    .card {\r\n        display: block;\r\n        padding: 5px;\r\n        text-align: center;\r\n        width: 100%;\r\n        height: auto;\r\n        background-color: var(--vscode-quickInput-background);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount, createEventDispatcher } from \"svelte\";\r\n\r\n    export let btn = { options: [] };\r\n\r\n    const dispatch = createEventDispatcher();\r\n    let current = { icon: \"\" };\r\n\r\n    const onSeletect = (idx) => {\r\n        btn.selectedIndex = idx;\r\n        current = btn.options[btn.selectedIndex];\r\n        dispatch(\"SelectedOption\", btn);\r\n    };\r\n\r\n    onMount(() => {\r\n        current = btn.options[btn.selectedIndex];\r\n    });\r\n</script>\r\n\r\n<div class=\"dropdown\">\r\n    <span class=\"dropbtn\"><i class={current.icon} /></span>\r\n    <div class=\"dropdown-content\">\r\n        {#each btn.options as option, i}\r\n            <a\r\n                class=\"item\"\r\n                href=\"#option\"\r\n                on:click|preventDefault={() => {\r\n                    onSeletect(i);\r\n                }}><i class={option.icon} /> {option.title}</a\r\n            >\r\n        {/each}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .red {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .yellow {\r\n        color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .orange {\r\n        color: var(--vscode-charts-orange);\r\n    }\r\n    .green {\r\n        color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n    .blue {\r\n        color: var(--vscode-charts-blue);\r\n    }\r\n    .purple {\r\n        color: var(--vscode-charts-purple);\r\n    }\r\n\r\n    /* Style The Dropdown Button */\r\n    .dropbtn {\r\n        margin: 0px;\r\n        padding: 2px 5px;\r\n        border: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .dropbtn:hover,\r\n    .dropbtn:focus {\r\n        background-color: var(--vscode-editorHoverWidget-border);\r\n    }\r\n\r\n    /* The container <div> - needed to position the dropdown content */\r\n    .dropdown {\r\n        position: relative;\r\n        display: inline-block;\r\n    }\r\n\r\n    /* Dropdown Content (Hidden by Default) */\r\n    .dropdown-content {\r\n        display: none;\r\n        position: absolute;\r\n        background-color: var(--vscode-menu-background);\r\n        min-width: 160px;\r\n        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n        z-index: 1;\r\n\r\n        /* visibility: hidden;\r\n        opacity: 0;\r\n        transition: visibility 0.3s linear, opacity 0.s linear;\r\n        */\r\n    }\r\n\r\n    /* Links inside the dropdown */\r\n    .dropdown-content a {\r\n        color: var(--vscode-menu-foreground);\r\n        padding: 4px 8px;\r\n        text-decoration: none;\r\n        display: block;\r\n    }\r\n\r\n    /* Change color of dropdown links on hover */\r\n    .dropdown-content a:hover {\r\n        background-color: var(--vscode-menu-selectionBackground);\r\n    }\r\n\r\n    .show {\r\n        display: block;\r\n    }\r\n    /* Show the dropdown menu on hover */\r\n    .dropdown:hover .dropdown-content {\r\n        display: block;\r\n        /*   visibility: visible;\r\n        opacity: 1; */\r\n    }\r\n\r\n    .dropdown:hover .dropdown-content:has(a:active) {\r\n        display: none;\r\n    }\r\n\r\n    .dropdown-conten:has(a) {\r\n        border: 4px;\r\n    }\r\n    /* Change the background color of the dropdown button when the dropdown content is shown */\r\n    .dropdown:hover .dropbtn {\r\n        background-color: var(--vscode-editorHoverWidget-border);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    export let value=0; \r\n    \r\n    let gaugeFill = null;\r\n    let gaugeCover = null;\r\n\r\n    function setGaugeValue(val) {\r\n        if (val < 0 || val > 1) return;\r\n        gaugeFill.style.transform = `rotate(${val / 2}turn)`;\r\n        gaugeCover.textContent = `${Math.round(val * 100)}%`;\r\n    }\r\n\r\n    onMount(() => {\r\n        setGaugeValue(value);\r\n    });\r\n</script>\r\n\r\n<div class=\"gauge\">\r\n    <div class=\"gauge__body\">\r\n        <div class=\"gauge__fill\" bind:this={gaugeFill} />\r\n        <div class=\"gauge__cover\" bind:this={gaugeCover} />\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .gauge {\r\n        margin: 0px auto;\r\n        width: 80%;\r\n        max-width: 250px;\r\n        font-family: \"Roboto\", sans-serif;\r\n        font-size: 24px;\r\n        color: var(--vscode-editor-foreground);\r\n    }\r\n\r\n    .gauge__body {\r\n        width: 100%;\r\n        height: 0;\r\n        padding-bottom: 50%;\r\n        background: var(--vscode-editorWidget-border);\r\n        position: relative;\r\n        border-top-left-radius: 100% 200%;\r\n        border-top-right-radius: 100% 200%;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .gauge__fill {\r\n        position: absolute;\r\n        top: 100%;\r\n        left: 0;\r\n        width: inherit;\r\n        height: 100%;\r\n        background: var(--vscode-charts-blue);\r\n        transform-origin: center top;\r\n        transform: rotate(0.25turn);\r\n        transition: transform 0.2s ease-out;\r\n    }\r\n\r\n    .gauge__cover {\r\n        width: 75%;\r\n        height: 150%;\r\n        background: var(--vscode-quickInput-background);\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n\r\n        /* Text */\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-bottom: 25%;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    //import { onMount } from \"svelte\";\r\n    export let id = \"\";\r\n    export let text = \"\";\r\n    export let onSave = (text) => {};\r\n    let _text = text;\r\n    let edit = false;\r\n    let newText = \"\";\r\n    let css = \"fas fa-edit\";\r\n    let disabled = false;\r\n\r\n    function onEdit() {\r\n        edit = edit ? false : true;\r\n    }\r\n\r\n    function onSubmit() {\r\n        disabled = true;\r\n        css = \"fas fa-spinner fa-spin\";\r\n        onSave(id, text, (value) => {\r\n            disabled = false;\r\n            css = \"fas fa-edit\";\r\n            if(value !== undefined) { \r\n                _text = value;\r\n                text = value;\r\n            }\r\n            else text = _text;\r\n            onEdit();\r\n        });\r\n    }\r\n\r\n    //$: newText = text;\r\n    //onMount(()=>{});\r\n</script>\r\n\r\n<div>\r\n    {#if edit === true}\r\n        <div class=\"item-group\">\r\n            <input {disabled} bind:value={text} type=\"text\" />\r\n            <button\r\n                {disabled}\r\n                class=\"btn-cancel\"\r\n                type=\"button\"\r\n                on:click={() => {\r\n                    onEdit();\r\n                }}\r\n            >\r\n                <i class=\"fas fa-xmark\" />\r\n            </button>\r\n            <button {disabled} type=\"button\" on:click={onSubmit}>\r\n                <i class={css} />\r\n            </button>\r\n        </div>\r\n    {:else}\r\n        <span on:click={onEdit}> {text} </span>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    span {\r\n        cursor: pointer;\r\n    }\r\n    span:hover {\r\n        color: var(--vscode-editor-foreground);\r\n    }\r\n    .item-group {\r\n        display: flex;\r\n        margin: 0px;\r\n    }\r\n    input {\r\n        height: 26px;\r\n    }\r\n    button {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n    .btn-cancel {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    export let value = 0;\r\n    export let color = \"green\";\r\n</script>\r\n\r\n<div class=\"progress-bar--wrap progress-bar--{color}\">\r\n    <div class=\"progress-bar\">\r\n        Progress\r\n        <div class=\"progress-bar--inner\" style=\"width: {value}%;\" />\r\n    </div>\r\n    <span class=\"progress-bar--counter\">{value}%</span>\r\n</div>\r\n\r\n<style>\r\n    .hidden {\r\n        visibility: hidden;\r\n        width: 0;\r\n    }\r\n\r\n    .progress-bar {\r\n        background: var(--vscode-editorWidget-border);\r\n        border-radius: 5px;\r\n        box-shadow: inset 0 0 0 1px var(--vscode-editorWidget-background);\r\n        height: 10px;\r\n        overflow: hidden;\r\n        position: relative;\r\n        text-indent: 100%;\r\n        width: 100%;\r\n    }\r\n    .progress-bar--counter {\r\n        margin-left: 10px;\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n    .progress-bar--wrap {\r\n        display: flex;\r\n        font-size: 13px;\r\n        font-weight: 500;\r\n        line-height: 1;\r\n        margin: 10px 0;\r\n    }\r\n    .progress-bar--inner {\r\n        transition: all 0.5s ease-in-out;\r\n        border-radius: 10px;\r\n        height: 10px;\r\n        left: 0;\r\n        min-height: 10px;\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n    .progress-bar--green {\r\n        color: var(--vscode-terminal-ansiGreen);\r\n    }\r\n    .progress-bar--green .progress-bar--inner {\r\n        background-color: var(--vscode-terminal-ansiGreen);\r\n    }  \r\n    .progress-bar--red {\r\n        color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .progress-bar--red .progress-bar--inner {\r\n        background-color: var(--vscode-terminal-ansiRed);\r\n    }\r\n    .progress-bar--yellow {\r\n        color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .progress-bar--yellow .progress-bar--inner {\r\n        background-color: var(--vscode-terminal-ansiYellow);\r\n    }\r\n    .progress-bar--magenta {\r\n        color: var(--vscode-terminal-ansiMagenta);\r\n    }\r\n    .progress-bar--magenta .progress-bar--inner {\r\n        background-color: var(--vscode-terminal-ansiMagenta);\r\n    }\r\n    .progress-bar--cyan {\r\n        color: var(--vscode-terminal-ansiCyan);\r\n    }\r\n    .progress-bar--cyan .progress-bar--inner {\r\n        background-color: var(--vscode-terminal-ansiCyan);\r\n    }\r\n    .progress-bar--orange {\r\n        color: var(--vscode-charts-orange);\r\n    }\r\n    .progress-bar--orange .progress-bar--inner {\r\n        background-color: var(--vscode-charts-orange);\r\n    }\r\n    .progress-bar--blue {\r\n        color: var(--vscode-charts-blue);\r\n    }\r\n    .progress-bar--blue .progress-bar--inner {\r\n        background-color: var(--vscode-charts-blue);\r\n    }\r\n    .progress-bar--purple {\r\n        color: var(--vscode-charts-purple);\r\n    }\r\n    .progress-bar--purple .progress-bar--inner {\r\n        background-color: var(--vscode-charts-purple);\r\n    }\r\n\r\n</style>\r\n",
    "<script>\r\n    let size = 50,\r\n        thickness = 3,\r\n        speed = 2000;\r\n</script>\r\n\r\n<svg\r\n    class=\"spinner\"\r\n    viewBox=\"0 0 50 50\"\r\n    width={size}\r\n    height={size}\r\n    style=\"--speed: {speed}ms\"\r\n>\r\n    <circle\r\n        class=\"path\"\r\n        cx=\"25\"\r\n        cy=\"25\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        stroke-width={thickness}\r\n    />\r\n</svg>\r\n\r\n<style>\r\n    .spinner {\r\n        animation: rotate var(--speed) linear infinite;\r\n        -webkit-animation: rotate var(--speed) linear infinite;\r\n        z-index: 2;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin: -35px 0 0 -35px;\r\n        width: 70px;\r\n        height: 70px;\r\n    }\r\n\r\n    .spinner .path {\r\n        /* \t\tstroke: hsl(210, 70, 75); */\r\n        stroke: dodgerblue;\r\n        stroke-linecap: round;\r\n        animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n        -webkit-animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes rotate {\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    @keyframes dash {\r\n        0% {\r\n            stroke-dasharray: 1, 150;\r\n            stroke-dashoffset: 0;\r\n        }\r\n        50% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -35;\r\n        }\r\n        100% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -124;\r\n        }\r\n    }\r\n\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}